-- Instances:

local GameLuncher = Instance.new("ScreenGui")
local Window = Instance.new("Frame")
local Main = Instance.new("Frame")
local List = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local Template = Instance.new("TextButton")
local Refresh = Instance.new("TextButton")
local Play = Instance.new("TextButton")
local Title = Instance.new("TextLabel")
local Exit = Instance.new("TextButton")

--Properties:

GameLuncher.Name = "GameLuncher"
GameLuncher.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
GameLuncher.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Window.Name = "Window"
Window.Parent = GameLuncher
Window.BackgroundColor3 = Color3.fromRGB(243, 243, 243)
Window.BorderColor3 = Color3.fromRGB(0, 0, 0)
Window.BorderSizePixel = 0
Window.Position = UDim2.new(0.421904773, 0, 0.356234103, 0)
Window.Size = UDim2.new(0, 274, 0, 25)

Main.Name = "Main"
Main.Parent = Window
Main.BackgroundColor3 = Color3.fromRGB(46, 46, 46)
Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(-0.0014528149, 0, 0.966988027, 0)
Main.Size = UDim2.new(0, 274, 0, 299)

List.Name = "List"
List.Parent = Main
List.Active = true
List.BackgroundColor3 = Color3.fromRGB(79, 79, 79)
List.BorderColor3 = Color3.fromRGB(255, 255, 255)
List.Position = UDim2.new(0, 0, -0.00334458356, 0)
List.Size = UDim2.new(0, 274, 0, 220)
List.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
List.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"

UIListLayout.Parent = List
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

Template.Name = "Template"
Template.Parent = Main
Template.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Template.BorderColor3 = Color3.fromRGB(0, 0, 0)
Template.BorderSizePixel = 0
Template.Size = UDim2.new(0, 262, 0, 23)
Template.Visible = false
Template.Font = Enum.Font.SourceSansBold
Template.TextColor3 = Color3.fromRGB(0, 0, 0)
Template.TextScaled = true
Template.TextSize = 14.000
Template.TextWrapped = true
Template.TextXAlignment = Enum.TextXAlignment.Left

Refresh.Name = "Refresh"
Refresh.Parent = Main
Refresh.BackgroundColor3 = Color3.fromRGB(255, 225, 0)
Refresh.BorderColor3 = Color3.fromRGB(0, 0, 0)
Refresh.BorderSizePixel = 0
Refresh.Position = UDim2.new(0.135036498, 0, 0.755852759, 0)
Refresh.Size = UDim2.new(0, 200, 0, 22)
Refresh.Font = Enum.Font.SourceSansBold
Refresh.Text = "Refresh"
Refresh.TextColor3 = Color3.fromRGB(0, 0, 0)
Refresh.TextScaled = true
Refresh.TextSize = 14.000
Refresh.TextWrapped = true

Play.Name = "Play"
Play.Parent = Main
Play.BackgroundColor3 = Color3.fromRGB(0, 255, 30)
Play.BorderColor3 = Color3.fromRGB(0, 0, 0)
Play.BorderSizePixel = 0
Play.Position = UDim2.new(0.135036498, 0, 0.862876177, 0)
Play.Size = UDim2.new(0, 200, 0, 22)
Play.Font = Enum.Font.SourceSansBold
Play.Text = "Play"
Play.TextColor3 = Color3.fromRGB(0, 0, 0)
Play.TextScaled = true
Play.TextSize = 14.000
Play.TextWrapped = true

Title.Name = "Title"
Title.Parent = Window
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
Title.BorderSizePixel = 0
Title.Size = UDim2.new(0, 222, 0, 24)
Title.Font = Enum.Font.SourceSans
Title.Text = "Mini Game Luncher(BY:hahaxio7777[DC])"
Title.TextColor3 = Color3.fromRGB(0, 0, 0)
Title.TextScaled = true
Title.TextSize = 14.000
Title.TextWrapped = true

Exit.Name = "Exit"
Exit.Parent = Window
Exit.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
Exit.BorderColor3 = Color3.fromRGB(0, 0, 0)
Exit.BorderSizePixel = 0
Exit.Position = UDim2.new(0.912408769, 0, 0, 0)
Exit.Size = UDim2.new(0, 24, 0, 24)
Exit.Font = Enum.Font.SourceSansBold
Exit.Text = "X"
Exit.TextColor3 = Color3.fromRGB(0, 0, 0)
Exit.TextSize = 14.000

-- Scripts:

local function XHSC_fake_script() -- Exit.LocalScript 
	local script = Instance.new('LocalScript', Exit)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Parent:Destroy()
	end)
end
coroutine.wrap(XHSC_fake_script)()
local function JYDBOTX_fake_script() -- Window.LocalScript 
	local script = Instance.new('LocalScript', Window)

	local UserInputService = game:GetService("UserInputService")
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end
coroutine.wrap(JYDBOTX_fake_script)()
local function RLHUDYR_fake_script() -- GameLuncher.Main 
	local script = Instance.new('LocalScript', GameLuncher)

	local ListHttp = game:HttpGet("https://raw.githubusercontent.com/hisawg02/Roblox_MiniGamesUI_Modules/refs/heads/main/GameLinkListForGameLuncher")
	local SelectedHttp = "https://github.com/hisawg02/Roblox_MiniGamesUI_Modules/raw/refs/heads/main/Mine"
	
	local function parseTableString(str)
		local func, err = loadstring("return " .. tostring(str))
	
		if not func then
			warn("Err: " .. tostring(err))
			return nil
		end
	
		local success, result = pcall(func)
		if not success then
			warn("ExecuteErr: " .. tostring(result))
			return nil
		end
	
		return result
	end
	
	local function Refresh()
		for i,item in ipairs(script.Parent.Window.Main.List:GetChildren()) do
			if item:IsA("TextButton") then
				item:Destroy()
			end
		end
		
		local GameListItems = parseTableString(ListHttp)
	
		if GameListItems ~= nil then
			for i, item in pairs(GameListItems) do
				local nt = script.Parent.Window.Main.Template:Clone()
				nt.Parent = script.Parent.Window.Main.List
				nt.Name = "GameItem"
				nt.Visible = true
				nt.Text = item.Name
				nt.MouseButton1Click:Connect(function()
					for i,item in ipairs(script.Parent.Window.Main.List:GetChildren()) do
						if item:IsA("TextButton") then
							item.BackgroundColor3 = script.Parent.Window.Main.Template.BackgroundColor3
							item.TextColor3 = script.Parent.Window.Main.Template.TextColor3
						end
					end
					
					nt.BackgroundColor3 = Color3.fromRGB(0,0,255)
					nt.TextColor3 = Color3.fromRGB(255,255,255)
					SelectedHttp = item.Link
				end)
			end
		end
	end
	
	script.Parent.Window.Main.Refresh.MouseButton1Click:Connect(function()
		Refresh()
	end)
	
	local loading = false
	
	local function Play(http)
		
		
		local GameModule = loadstring(game:HttpGet(http))()
		script.Parent.Window.Main.Play.Text = "Play"
		
		-- Instances:
	
		local GameUI = Instance.new("ScreenGui")
		local Window = Instance.new("TextLabel")
		local GameFrame = Instance.new("Frame")
		local Exit = Instance.new("TextButton")
	
		--Properties:
	
		GameUI.Name = "GameUI"
		GameUI.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
		GameUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	
		Window.Name = "Window"
		Window.Parent = GameUI
		Window.BackgroundColor3 = Color3.fromRGB(255, 175, 15)
		Window.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Window.BorderSizePixel = 0
		Window.Position = UDim2.new(0.694285691, 0, 0.678117037, 0)
		Window.Size = UDim2.new(0.0609523803, 0, 0.0534351133, 0)
		Window.Font = Enum.Font.SourceSansBold
		Window.Text = "Drag"
		Window.TextColor3 = Color3.fromRGB(0, 0, 0)
		Window.TextSize = 14.000
	
		GameFrame.Name = "GameFrame"
		GameFrame.Parent = Window
		GameFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		GameFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
		GameFrame.BorderSizePixel = 0
		GameFrame.Position = UDim2.new(-6.734375, 0, -7.69047642, 0)
		GameFrame.Size = UDim2.new(6.734375, 0, 8.69047642, 0)
	
		Exit.Name = "Exit"
		Exit.Parent = GameFrame
		Exit.BackgroundColor3 = Color3.fromRGB(255, 0, 4)
		Exit.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Exit.BorderSizePixel = 0
		Exit.Position = UDim2.new(0.663573086, 0, 1, 0)
		Exit.Size = UDim2.new(0.336426914, 0, 0.0712328777, 0)
		Exit.Font = Enum.Font.SourceSansBold
		Exit.Text = "Exit"
		Exit.TextColor3 = Color3.fromRGB(0, 0, 0)
		Exit.TextScaled = true
		Exit.TextSize = 14.000
		Exit.TextWrapped = true
	
		-- Scripts:
	
		local function VPPLPC_fake_script() -- Window.LocalScript 
			local script = Instance.new('LocalScript', Window)
	
			local UserInputService = game:GetService("UserInputService")
	
			local gui = script.Parent
	
			local dragging
			local dragInput
			local dragStart
			local startPos
	
			local function update(input)
				local delta = input.Position - dragStart
				gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
			end
	
			gui.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					dragging = true
					dragStart = input.Position
					startPos = gui.Position
	
					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragging = false
						end
					end)
				end
			end)
	
			gui.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					dragInput = input
				end
			end)
	
			UserInputService.InputChanged:Connect(function(input)
				if input == dragInput and dragging then
					update(input)
				end
			end)
		end
		coroutine.wrap(VPPLPC_fake_script)()
		local function TOTSQX_fake_script() -- Exit.LocalScript 
			local script = Instance.new('LocalScript', Exit)
	
			script.Parent.MouseButton1Click:Connect(function()
				script.Parent.Parent.Parent:Destroy()
			end)
		end
		coroutine.wrap(TOTSQX_fake_script)()
		
		
		local s,e = pcall(function()
			GameModule.Install(GameFrame)
		end)
		
		if not s then
			warn("GameError:"..e)
		end
	end
	
	script.Parent.Window.Main.Play.MouseButton1Click:Connect(function()
		if loading == false then
			loading = true
			script.Parent.Window.Main.Play.Text = "Loading GameFile..."
			Play(SelectedHttp)
			loading = false
		end	
	end)
	
	Refresh()
end
coroutine.wrap(RLHUDYR_fake_script)()
